#include <iostream>
using namespace std;
class node
{
public:
    int val;
    node *next;
    node *prev;
    node(int data)
    {
        val = data;
        next = NULL;
        prev = NULL;
    }
};
class doublylinkedlist
{
public:
    node *head;
    node *tail;
    doublylinkedlist()
    {
        head = NULL;
        tail = NULL;
    }
    void traverse(int val)
    {
        node *newnode = new node(val);
        if (head == NULL)
        {
            head = newnode;
            tail = newnode;
            return;
        }
        newnode->next = head;
        head->prev = newnode;
        head = newnode;
        return;
    }
    void insertatrandom(int val, int index)
    {
        int count = 1;
        node *temp = head;
        while (count < index-1)
        {
            temp = temp->next;
            count++;
        }
        node *new_node = new node(val);
        new_node->next = temp->next;
        temp->next = new_node;
        new_node->prev = temp;
        temp = new_node;
        return;
    }
    void display()
    {
        node *temp = head;
        while (temp != NULL)
        {
            cout << temp->val << "<->";
            temp = temp->next;
        }
        cout << '\n';
    }
};
int main()
{
    doublylinkedlist dll;
    dll.traverse(4);
    dll.traverse(3);
    dll.traverse(2);
    dll.traverse(1);
    dll.display();
    dll.insertatrandom(9, 3);
    dll.display();

    return 0;
}
